name: CD/@configu/store

on:
  workflow_dispatch:
  push:
    tags:
      - 'store/*/v*'

jobs:
  pre-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/deploy-start-action
        with:
          slack-webhook: ${{ secrets.SLACK_WEBHOOK_URL }}

  release:
    runs-on: ${{ matrix.os }}-latest
    needs: pre-release
    strategy:
      matrix:
        os:
          - ubuntu
          - macos
          - windows
        # https://nodejs.org/download/release/latest/
        include:
          - os: ubuntu
            arch: arm64
            dist: linux-arm64
          - os: ubuntu
            arch: armv7l
            dist: linux-armv7l
          # - os: ubuntu
          #   arch: ppc64le
          #   dist: linux-ppc64le
          # - os: ubuntu
          #   arch: s390x
          #   dist: linux-s390x
          - os: ubuntu
            arch: x64
            dist: linux-x64
          - os: macos
            arch: arm64
            dist: darwin-arm64
          - os: macos
            arch: x64
            dist: darwin-x64
          - os: windows
            arch: arm64
            dist: win-arm64
          - os: windows
            arch: x64
            dist: win-x64

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/get-release-action
        id: release

      - uses: ./.github/actions/ts-env-action
        with:
          architecture: ${{ matrix.arch }}

      - name: Get package name
        id: package
        run: |
          package=$(echo "${{ steps.release.outputs.package }}" | awk -F '/' '{print $2}')
          echo "package_name=@configu/$package" >> $GITHUB_OUTPUT

          echo "package: $package"
          echo "package_name: $package_name"

      - name: Bump package version
        run: |
          pnpm --filter ${{ steps.package.outputs.package_name }} exec \
            npm --no-git-tag-version version ${{ steps.release.outputs.version }}

      - name: Build package code
        id: build
        run: |
          pnpm --filter ${{ steps.package.outputs.package_name }} run \
            build

          dist_path="${{ steps.release.outputs.package_path }}/dist"
          dist_in="$dist_path/index.cjs"
          dist_out="$dist_path/index-${{ matrix.dist }}.js"

          echo "dist_path=dist_path" >> $GITHUB_OUTPUT
          echo "dist_in=dist_in" >> $GITHUB_OUTPUT
          echo "dist_out=dist_out" >> $GITHUB_OUTPUT

          pnpx shx cp $dist_in $dist_out

      - name: Upload artifacts to release
        uses: softprops/action-gh-release@v2
        if: ${{startsWith(github.ref, 'refs/tags/') }}
        with:
          files: |
            ${{ steps.build.outputs.dist_out }}

      # - uses: actions/upload-artifact@master
      #   with:
      #     name: ${{ env.PACKAGE_NAME }}-${{ matrix.os }}-${{ matrix.architecture }}
      #     path: ${{ env.PACKAGE_PATH }}/dist

  post-release:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/deploy-end-action
        if: always()
        with:
          slack-webhook: ${{ secrets.SLACK_WEBHOOK_URL }}

          #   end-release:
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#       - uses: actions/download-artifact@master
#         with:
#           name: ${{ env.PACKAGE_NAME }}-ubuntu-x64
#           path: ${{ env.PACKAGE_PATH }}/dist
#       - uses: actions/download-artifact@master
#         with:
#           name: ${{ env.PACKAGE_NAME }}-macos-x64
#           path: ${{ env.PACKAGE_PATH }}/dist/latest
#       - uses: actions/download-artifact@master
#         with:
#           name: ${{ env.PACKAGE_NAME }}-windows-x64
#           path: ${{ env.PACKAGE_PATH }}/dist/latest
#       - uses: actions/download-artifact@master
#         with:
#           name: ${{ env.PACKAGE_NAME }}-ubuntu-arm64
#           path: ${{ env.PACKAGE_PATH }}/dist
#       - uses: actions/download-artifact@master
#         with:
#           name: ${{ env.PACKAGE_NAME }}-macos-arm64
#           path: ${{ env.PACKAGE_PATH }}/dist/latest
#       - uses: actions/download-artifact@master
#         with:
#           name: ${{ env.PACKAGE_NAME }}-windows-arm64
#           path: ${{ env.PACKAGE_PATH }}/dist/latest

#       - name: Upload artifacts to release
#         uses: softprops/action-gh-release@v2
#         with:
#           make_latest: true
#           prerelease: true
#           name: integrations
#           tag_name: integrations-${{ env.VERSION }}
#           files: |
#             ${{ env.PACKAGE_PATH }}/dist/latest/**/*

