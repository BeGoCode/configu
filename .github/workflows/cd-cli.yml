name: CD/@configu/cli

on:
  push:
    tags:
      - 'cli/v*'

env:
  PACKAGE_NAME: '@configu/cli'
  DOCKER_IMAGE_NAME: 'configu/cli'
  ARTIFACT_NAME: 'configu-cli'
  PACKAGE_PATH: 'packages/cli'

jobs:
  cd-cli:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: ./.github/actions/deploy-start-action
        id: deployment
        with:
          package-name: ${{ env.PACKAGE_NAME }}
          slack-webhook: ${{ secrets.SLACK_WEBHOOK_URL }}

      - uses: ./.github/actions/ts-env-action

      - name: Compile the CLI into a single executable
        run: pnpm -r compile

      - uses: actions/upload-artifact@master
        with:
          name: ${{ env.ARTIFACT_NAME }}-${{ matrix.os }}
          path: ${{ env.PACKAGE_PATH }}/dist
  end-release:
    runs-on: ubuntu-latest
    needs: cd-cli
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/download-artifact@master
        with:
          name: ${{ env.ARTIFACT_NAME }}-ubuntu-latest
          path: ${{ env.ARTIFACT_NAME }}/dist
      - uses: actions/download-artifact@master
        with:
          name: ${{ env.ARTIFACT_NAME }}-windows-latest
          path: ${{ env.ARTIFACT_NAME }}/dist
      - uses: actions/download-artifact@master
        with:
          name: ${{ env.ARTIFACT_NAME }}-macos-latest
          path: ${{ env.ARTIFACT_NAME }}/dist

      - name: Upload artifacts to release
        uses: softprops/action-gh-release@v2
        with:
          make_latest: ${{  github.branch == 'main' }}
          prerelease: ${{  github.branch != 'main' }}
          name: ${{  github.ref_name }}
          tag_name: ${{  github.ref_name }}
          files: |
            ${{ env.ARTIFACT_NAME }}/dist/*

  docker:
    runs-on: ubuntu-latest
    needs: cd-cli
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/download-artifact@master
        with:
          name: ${{ env.ARTIFACT_NAME }}-ubuntu-latest
          path: ${{ env.ARTIFACT_NAME }}/dist
      - uses: actions/download-artifact@master
        with:
          name: ${{ env.ARTIFACT_NAME }}-windows-latest
          path: ${{ env.ARTIFACT_NAME }}/dist
      - uses: actions/download-artifact@master
        with:
          name: ${{ env.ARTIFACT_NAME }}-macos-latest
          path: ${{ env.ARTIFACT_NAME }}/dist

      - name: Build docker image and push to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: ${{ env.CWD }}/${{ env.PACKAGE_PATH }}
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8
          tags: ${{ env.DOCKERHUB_REPOSITORY }}:${{ steps.deployment.outputs.release-version }},${{ env.DOCKERHUB_REPOSITORY }}:latest
          push: true
